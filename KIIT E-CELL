<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>KIIT E-Cell</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <section id="hero">
        <div class="container">
            <h1 id="headline">Empowering Tomorrow's Entrepreneurs Today</h1>
            <p id="subtext">KIIT E-Cell fosters innovation and entrepreneurship among students, providing the resources and support needed to turn ideas into reality.</p>
            <button id="cta">Join Us Now</button>
        </div>
    </section>
    <script src="script.js"></script>
</body>
</html>
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

#hero {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: url('hero-bg.jpg') no-repeat center center/cover;
    color: white;
    text-align: center;
    padding: 0 20px;
}

.container {
    max-width: 800px;
}

#cta {
    background-color: #ff5722;
    color: white;
    border: none;
    padding: 15px 30px;
    font-size: 1.2em;
    cursor: pointer;
}

#cta:hover {
    background-color: #e64a19;
}
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define PORT 8080
#define BUFSIZE 1024

void handle_client(int client_socket) {
    char buffer[BUFSIZE];
    read(client_socket, buffer, BUFSIZE);

    char *response = "HTTP/1.1 200 OK\r\n"
                     "Content-Type: application/json\r\n\r\n"
                     "{\"headline\":\"Empowering Tomorrow's Entrepreneurs Today\","
                     "\"subtext\":\"KIIT E-Cell fosters innovation and entrepreneurship among students, providing the resources and support needed to turn ideas into reality.\","
                     "\"cta_label\":\"Join Us Now\"}";

    write(client_socket, response, strlen(response));
    close(client_socket);
}

int main() {
    int server_socket, client_socket;
    struct sockaddr_in server_addr, client_addr;
    socklen_t addr_len = sizeof(client_addr);

    server_socket = socket(AF_INET, SOCK_STREAM, 0);
    if (server_socket == 0) {
        perror("Socket creation failed");
        exit(EXIT_FAILURE);
    }

    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = INADDR_ANY;
    server_addr.sin_port = htons(PORT);

    if (bind(server_socket, (struct sockaddr *)&server_addr, sizeof(server_addr)) < 0) {
        perror("Bind failed");
        close(server_socket);
        exit(EXIT_FAILURE);
    }

    if (listen(server_socket, 3) < 0) {
        perror("Listen failed");
        close(server_socket);
        exit(EXIT_FAILURE);
    }

    printf("Server is listening on port %d\n", PORT);

    while ((client_socket = accept(server_socket, (struct sockaddr *)&client_addr, &addr_len)) >= 0) {
        handle_client(client_socket);
    }

    close(server_socket);
    return 0;
}
document.addEventListener('DOMContentLoaded', function() {
    fetch('http://localhost:8080')
        .then(response => response.json())
        .then(data => {
            document.getElementById('headline').textContent = data.headline;
            document.getElementById('subtext').textContent = data.subtext;
            document.getElementById('cta').textContent = data.cta_label;
        })
        .catch(error => console.error('Error fetching hero content:', error));
});
New File at / Â· Soham-Bose06/KIIT-E-CELL
